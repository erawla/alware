#include <stdio.h>
#include <stdlib.h>

typedef struct _Node
{
	int data;
	struct _Node* next;
}Node;

void printList(Node* head)
{
	Node* ptr = head;
	while (ptr)
	{
		printf("%d ", ptr->data);
		printf("-> ");
		ptr = ptr->next;
	}
	printf("NULL");
	printf("\n");
}

void push(Node** head, int data)
{
	Node* newNode = (Node*)malloc(sizeof(Node));
	newNode->data = data;
	newNode->next = *head;
	*head = newNode;
}

Node* Reserve(Node* head, int g)
{
	Node* prev=head;
	Node* cur=NULL;
	Node* tmp=head;
	
	int i=0, n, j, cnt=g, m=0;
	
	while(tmp!=NULL)
	{
		tmp=tmp->next; 
		i++;
	}//노드 갯수 구하는 코드 
	//printf("%d\n",i);
	Node* post=head;
	n=i;
	while(post!=NULL)
	{
		prev=cur;
		cur=post;
		post=post->next;
		
		cur->next=prev;
	}//뒤집는 코드
	head=cur;
//	printf("head= %d",head->next->data);
	Node* first=head;
	Node* temp=head;
	Node* start=head;
	Node* finish=head;
	
	for(j=0;j<i-g;j++) start=start->next;
	if((i%g)==0)
	{
		for(j=0;j<g-1;j++) finish=finish->next;
	}
	else
	{
		for(j=0;j<(i%g)-1;j++) finish=finish->next;
	}
	
//	printf("first= %d, finish=%d\n",start->data,finish->data);
	
//	printf("first= %d nextfirst=%d\n",start->data,start->next->data);
	
	while((i-g)>0)
	{
		//printf("*i= %d\n",i);
		first=head;
		temp=head;
	//	printf("f_first= %d f_temp=%d\n",first->data,temp->data);
		
		for(j=0;j<i-1;j++)
		{
//			printf("%d",j);
			temp=temp->next;
		//	printf("temp= %d\n",temp->data);
		}
//		printf("cur=%d\n",cur->data);
		for(j=0;j<i-(2*g);j++)
		{
//			printf("%d",j);
			first=first->next;
		//	printf("first=%d\n",first->data);
		}
	//	printf("first= %d, temp=%d\n",first->data,temp->data);
		temp->next=first;
		//printf("temp= %d nexttemp=%d\n",temp->data,temp->next->data);
		i=i-g;
	} 
//	printf("i=%d",i);
	//for(j=0;j<9;j++) 
//	{
	//	printf("%d->",cur->data);
//		cur=cur->next;
//	}
	temp=head;
	first=head;
	//printf("first=%d\n",first->data);
	finish->next=start;
	if(g==1)
	{
		first=first->next;
	}
	else if((n%g)==0)
	{
		for(j=0;j<n-g;j++)
		{
			first=first->next;
			printf("first= %d\n",first->data);
		}
	}
	else
	{
		for(j=0;j<(n%g);j++)
		{
			first=first->next;
			//printf("first= %d\n",first->data);
		}
	}
	
	for(j=0;j<i-1;j++) 
	{
		temp=temp->next;
	//	printf("temp= %d\n",temp->data);
	}	
	temp->next=NULL;
	
	head=first;
	//for(j=0;j<8;j++)
//	{
//		printf("%d->",head->data);
//		head=head->next;
//	}
}

int main()
{
	int N, list[100], g;
	scanf("%d", &N);
	int i;
	for(i=0; i<N; i++)
	scanf("%d", &list[i]);
	Node* head = NULL;
	scanf("%d", &g);
	for (i = N-1; i >= 0; i--)
	push(&head, list[i]);
	printList(head);
	head = Reserve(head, g);
	printList(head);
	
	return 0;
}
